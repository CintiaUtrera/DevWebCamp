{"version":3,"sources":["app.js","horas.js","ponentes.js","tags.js"],"names":["paginaActual","urlActual","window","location","enlace","document","querySelector","pathname","classList","add","addEventListener","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","terminoBusqueda","e","target","name","value","horaPrevia","remove","Object","values","includes","buscarEventos","async","url","resultado","fetch","eventos","listadoHoras","forEach","li","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","seleccionarHora","obtenerHorasDisponibles","json","id","horaSeleccionada","onclick","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","respuesta","arrayPonentes","ponente","nombre","trim","apellido","formatearPonentes","obtenerPonentes","length","expresion","RegExp","normalize","replace","toLowerCase","search","firstChild","removeChild","ponenteHtml","createElement","textContent","ponenteId","appendChild","noResultados","mostrarPonentes","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["\r\n\r\nwindow.addEventListener('load', function() {\r\n    paginaActual();\r\n});\r\n\r\n\r\nfunction paginaActual() {\r\n    const urlActual = window.location;\r\n    const enlace = document.querySelector(`a[href=\"${urlActual.pathname}\"]`);\r\n    if (enlace) {\r\n        enlace.classList.add('dashboard__enlace--actual');\r\n    }\r\n}\r\n","(function(){\r\n    const horas = document.querySelector('#horas')\r\n\r\n    if(horas){\r\n\r\n        let busqueda = {\r\n            categoria_id: '',\r\n            dia: ''\r\n        }\r\n\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n\r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        dias.forEach( dia => dia.addEventListener('change', terminoBusqueda));\r\n\r\n        if(!Object.values(busqueda).includes('')) {\r\n            (async () => {\r\n                await buscarEventos();\r\n\r\n                const id = inputHiddenHora.value;\r\n\r\n                // Resaltar la hora actual\r\n                const horaSeleccionada = document.querySelector(`[data-hora-id=\"${id}\"]`);\r\n                horaSeleccionada.classList.remove('horas__hora--deshabilitada');\r\n                horaSeleccionada.classList.add('horas__hora--seleccionada');\r\n\r\n                horaSeleccionada.onclick = seleccionarHora;\r\n            })()\r\n        }\r\n\r\n        function terminoBusqueda(e){\r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            //Reiniciar los campos ocultos y el selector de horas\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if(horaPrevia){\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n\r\n\r\n            if(Object.values(busqueda).includes('')){\r\n                return\r\n            }\r\n\r\n            buscarEventos();\r\n        }\r\n\r\n\r\n        async function buscarEventos(){\r\n            const { dia, categoria_id } = busqueda;\r\n            const url =  `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n            \r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n\r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n\r\n\r\n        function obtenerHorasDisponibles(eventos){\r\n            // Reiniciar las horas\r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach( li => li.classList.add('horas__hora--deshabilitada'));\r\n\r\n            // comprobar eventos tomados y quitar la vaariable deshabilitada\r\n            const horasTomadas = eventos.map(evento => evento.hora_id);\r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n\r\n            const resultado = listadoHorasArray.filter( li => !horasTomadas.includes(li.dataset.horaId));\r\n            resultado.forEach( li => li.classList.remove('horas__hora--deshabilitada'));\r\n\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n            horasDisponibles.forEach(hora => hora.addEventListener('click', seleccionarHora));\r\n\r\n            \r\n        }\r\n\r\n\r\n        function seleccionarHora(e){\r\n            // deshabilitar hora previa, si hay un nuevo click\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if(horaPrevia){\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n            // Agregar clase de seleccionado\r\n            e.target.classList.add('horas__hora--seleccionada');\r\n\r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n\r\n            //Llenar el campo oculto de dia\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n\r\n        }\r\n    }\r\n})();","(function(){\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n\r\n    if(ponentesInput){\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        const listadoPonentes = document.querySelector('#listado-ponentes');\r\n\r\n        obtenerPonentes();\r\n        ponentesInput.addEventListener('input', buscarPonentes)\r\n\r\n        async function obtenerPonentes(){\r\n            const url =  `/api/ponentes`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n\r\n            formatearPonentes(resultado);\r\n        }\r\n\r\n\r\n        function formatearPonentes(arrayPonentes = []){\r\n            ponentes = arrayPonentes.map( ponente => {\r\n                return{\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n        function buscarPonentes(e){\r\n            const busqueda = e.target.value;\r\n            \r\n            if(busqueda.length >= 3) {\r\n                const expresion = new RegExp(busqueda.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\"), \"i\");\r\n                ponentesFiltrados = ponentes.filter(ponente => {\r\n                    if(ponente.nombre.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase().search(expresion) != -1) {\r\n                        return ponente\r\n                    }\r\n                })\r\n            } else {\r\n                ponentesFiltrados = [];\r\n            }\r\n\r\n            mostrarPonentes();\r\n        }\r\n\r\n\r\n        function mostrarPonentes(){\r\n            // eliminar elementos en el HTML \r\n            while(listadoPonentes.firstChild){\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild);\r\n            }\r\n\r\n            if(ponentesFiltrados.length > 0){\r\n                ponentesFiltrados.forEach( ponente => {\r\n                    const ponenteHtml = document.createElement('LI');\r\n                    ponenteHtml.classList.add('listado-ponentes__ponente');\r\n                    ponenteHtml.textContent = ponente.nombre;\r\n                    ponenteHtml.dataset.ponenteId = ponente.id;\r\n    \r\n                    // Añadir al Dom\r\n                    listadoPonentes.appendChild(ponenteHtml);\r\n                    \r\n                });\r\n            } else{\r\n                const noResultados = document.createElement('P');\r\n                noResultados.classList.add('listado-ponentes__no-resultado');\r\n                noResultados.textContent = \"No hay resultados para tu busqueda\";\r\n                listadoPonentes.appendChild(noResultados);\r\n            }\r\n            \r\n        }\r\n\r\n\r\n    }\r\n})();","(function(){\r\n    const tagsInput = document.querySelector('#tags_input')\r\n\r\n    if(tagsInput){\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n        let tags = [];\r\n\r\n        //Recuperar del input oculto\r\n        if(tagsInputHidden.value !== ''){\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n        // Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress', guardarTag)\r\n\r\n\r\n        function guardarTag(e){\r\n            if(e.keyCode === 44){\r\n                if(e.target.value.trim() === '' || e.target.value < 1){\r\n                    return;\r\n                }\r\n                e.preventDefault();\r\n                tags = [...tags, e.target.value.trim()];\r\n                tagsInput.value = '';\r\n\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n\r\n        function mostrarTags(){\r\n            tagsDiv.textContent = '';\r\n\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            })\r\n            actualizarInputHidden();\r\n        }\r\n\r\n\r\n        function eliminarTag(e){\r\n            e.target.remove();\r\n\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        \r\n        function actualizarInputHidden(){\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n})();"]}